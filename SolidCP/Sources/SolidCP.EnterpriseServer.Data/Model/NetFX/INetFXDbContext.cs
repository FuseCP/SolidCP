// <auto-generated>
// ReSharper disable All
#if NETFRAMEWORK

using AccessToken = SolidCP.EnterpriseServer.Base.HostedSolution.AccessToken;
using SolidCP.EnterpriseServer;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Spatial;
using System.Data.Entity.Validation;
using System.Linq;
using System.Runtime.Serialization;
using System.Threading;
using System.Threading.Tasks;

namespace SolidCP.EnterpriseServer.NetFX
{
    // ****************************************************************************************************
    // This is not a commercial licence, therefore only a few tables/views/stored procedures are generated.
    // ****************************************************************************************************

    public interface INetFXDbContext : Data.IGenericDbContext, IDisposable
    {
        DbSet<AccessToken> AccessTokens { get; set; } // AccessTokens

        int SaveChanges();
        Task<int> SaveChangesAsync();
        Task<int> SaveChangesAsync(CancellationToken cancellationToken);
        DbChangeTracker ChangeTracker { get; }
        DbContextConfiguration Configuration { get; }
        Database Database { get; }
        DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        DbEntityEntry Entry(object entity);
        IEnumerable<DbEntityValidationResult> GetValidationErrors();
        DbSet Set(Type entityType);
        DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();

        // Stored Procedures
        int AddAccessToken(out int? tokenId, Guid? accessToken, DateTime? expirationDate, int? accountId, int? itemId, int? tokenType);
        // AddAccessTokenAsync() cannot be created due to having out parameters, or is relying on the procedure result (int)

        int AddAdditionalGroup(out int? groupId, int? userId, string groupName);
        // AddAdditionalGroupAsync() cannot be created due to having out parameters, or is relying on the procedure result (int)

        int AddAuditLogRecord(string recordId, int? severityId, int? userId, int? packageId, string username, int? itemId, DateTime? startDate, DateTime? finishDate, string sourceName, string taskName, string itemName, string executionLog);
        // AddAuditLogRecordAsync() cannot be created due to having out parameters, or is relying on the procedure result (int)

        int AddBackgroundTask(out int? backgroundTaskId, Guid? guid, string taskId, int? scheduleId, int? packageId, int? userId, int? effectiveUserId, string taskName, int? itemId, string itemName, DateTime? startDate, int? indicatorCurrent, int? indicatorMaximum, int? maximumExecutionTime, string source, int? severity, bool? completed, bool? notifyOnComplete, int? status);
        // AddBackgroundTaskAsync() cannot be created due to having out parameters, or is relying on the procedure result (int)

        int AddBackgroundTaskLog(int? taskId, DateTime? date, string exceptionStackTrace, int? innerTaskStart, int? severity, string text, int? textIdent, string xmlParameters);
        // AddBackgroundTaskLogAsync() cannot be created due to having out parameters, or is relying on the procedure result (int)

        int AddBackgroundTaskParam(int? taskId, string name, string value, string typeName);
        // AddBackgroundTaskParamAsync() cannot be created due to having out parameters, or is relying on the procedure result (int)

        int AddBackgroundTaskStack(int? taskId);
        // AddBackgroundTaskStackAsync() cannot be created due to having out parameters, or is relying on the procedure result (int)

        int AddBlackBerryUser(int? accountId);
        // AddBlackBerryUserAsync() cannot be created due to having out parameters, or is relying on the procedure result (int)

        int AddCluster(out int? clusterId, string clusterName);
        // AddClusterAsync() cannot be created due to having out parameters, or is relying on the procedure result (int)

        int AddComment(int? actorId, string itemTypeId, int? itemId, string commentText, int? severityId);
        // AddCommentAsync() cannot be created due to having out parameters, or is relying on the procedure result (int)

    }
}
#endif
// </auto-generated>
