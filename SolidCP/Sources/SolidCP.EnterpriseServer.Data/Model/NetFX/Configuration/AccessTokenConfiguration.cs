// <auto-generated>
// ReSharper disable All
#if NETFRAMEWORK

using AccessToken = SolidCP.EnterpriseServer.Base.HostedSolution.AccessToken;
using SolidCP.EnterpriseServer;
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
using System.Data.Entity.Spatial;
using System.Runtime.Serialization;

namespace SolidCP.EnterpriseServer.NetFX
{
    // ****************************************************************************************************
    // This is not a commercial licence, therefore only a few tables/views/stored procedures are generated.
    // ****************************************************************************************************

    // AccessTokens
    public class AccessTokenConfiguration : EntityTypeConfiguration<AccessToken>
    {
        public AccessTokenConfiguration()
            : this("dbo")
        {
        }

        public AccessTokenConfiguration(string schema)
        {
            ToTable("AccessTokens", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.AccessTokenGuid).HasColumnName(@"AccessTokenGuid").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.ExpirationDate).HasColumnName(@"ExpirationDate").HasColumnType("datetime").IsRequired();
            Property(x => x.AccountId).HasColumnName(@"AccountID").HasColumnType("int").IsRequired();
            Property(x => x.ItemId).HasColumnName(@"ItemId").HasColumnType("int").IsRequired();
            Property(x => x.TokenType).HasColumnName(@"TokenType").HasColumnType("int").IsRequired();
            Property(x => x.SmsResponse).HasColumnName(@"SmsResponse").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
        }
    }

}
#endif
// </auto-generated>
