// wcf service contract
@using Microsoft.CodeAnalysis
@using Microsoft.CodeAnalysis.CSharp
@using Microsoft.CodeAnalysis.CSharp.Syntax
@using System.Collections.Generic;
@using System.Linq;

@using static Microsoft.CodeAnalysis.CSharp.SyntaxFactory

@namespace SolidCP.Build
@inherits RazorBlade.PlainTextTemplate

@Class.AttributeLists
[System.CodeDom.Compiler.GeneratedCodeAttribute("SolidCP.Build", "1.0")]
[ServiceContract(Namespace="@(WebServiceNamespace)")]
public interface I@(Class.Identifier) {

	@foreach (var method in WebMethods
		.Select(m => (MemberDeclarationSyntax)MethodDeclaration(m.ReturnType, m.Identifier)
					.WithAttributeLists(m.AttributeLists
						.Add(AttributeList(SingletonSeparatedList(Attribute(IdentifierName("OperationContract"))))))
					.WithParameterList(m.ParameterList)
					.WithSemicolonToken(Token(SyntaxKind.SemicolonToken)))) {
		@method
	}

}

@functions
{
	public string WebServiceNamespace { get; set; }
	public ClassDeclarationSyntax Class { get; set; }
	public IEnumerable<MethodDeclarationSyntax> WebMethods { get; set; }
}