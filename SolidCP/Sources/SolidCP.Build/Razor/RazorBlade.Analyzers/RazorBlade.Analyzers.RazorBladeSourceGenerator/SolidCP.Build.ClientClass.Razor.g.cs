#pragma checksum "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4c2561f9235ff8806cf44324977801e9e6181e71"
// <auto-generated/>
#pragma warning disable 1591
namespace SolidCP.Build
{
    #line hidden
#nullable restore
#line 2 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
using Microsoft.CodeAnalysis;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
using Microsoft.CodeAnalysis.CSharp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
using Microsoft.CodeAnalysis.CSharp.Syntax;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
using static Microsoft.CodeAnalysis.CSharp.SyntaxFactory;

#line default
#line hidden
#nullable disable
    #nullable restore
    internal partial class ClientClass : RazorBlade.PlainTextTemplate
    #nullable disable
    {
        #pragma warning disable 1998
        protected async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("// wcf client proxy class\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n[System.CodeDom.Compiler.GeneratedCodeAttribute(\"SolidCP.Build\", \"1.0\")]\r\npublic class ");
#nullable restore
#line (14,16)-(14,32) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(Class.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral(": SolidCP.Web.Client.ClientBase<I");
#nullable restore
#line (14,68)-(14,84) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(Class.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral(", ");
#nullable restore
#line (14,89)-(14,105) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(Class.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral("AssemblyClient>, I");
#nullable restore
#line (14,126)-(14,142) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(Class.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral(" {\r\n\r\n");
#nullable restore
#line 16 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
     foreach (var method in WebMethods
		.Select(m => new {
			Method = m,
			Normal = (MemberDeclarationSyntax)MethodDeclaration(m.ReturnType, m.Identifier)
					.WithModifiers(TokenList(Token(SyntaxKind.PublicKeyword)))
					.WithParameterList(m.ParameterList),
			Async = (MemberDeclarationSyntax)MethodDeclaration(ParseTypeName(
						(m.ReturnType is PredefinedTypeSyntax && ((PredefinedTypeSyntax)m.ReturnType).Keyword.IsKind(SyntaxKind.VoidKeyword)) ? 
						"System.Threading.Tasks.Task" : $"System.Threading.Tasks.Task<{m.ReturnType}>"),
						$"{m.Identifier}Async")
					.WithModifiers(TokenList(Token(SyntaxKind.PublicKeyword), Token(SyntaxKind.AsyncKeyword)))
					.WithParameterList(m.ParameterList),
			IsVoid = (m.ReturnType is PredefinedTypeSyntax && ((PredefinedTypeSyntax)m.ReturnType).Keyword.IsKind(SyntaxKind.VoidKeyword)),
			IsRefPar = (m.ParameterList.Parameters.Any(p => p.Modifiers.Any()))
			}))
	{
		

#line default
#line hidden
#nullable disable
#nullable restore
#line (32,4)-(32,39) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(method.Normal.NormalizeWhitespace());

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\t\t{\r\n\t\t\t");
#nullable restore
#line (35,6)-(35,37) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(method.IsVoid ? "" : $"return ");

#line default
#line hidden
#nullable disable
            WriteLiteral("base.Client.");
#nullable restore
#line (35,52)-(35,76) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(method.Method.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral("(\r\n\t\t");
#nullable restore
#line 36 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
               

		var first = true;
		foreach (var par in method.Method.ParameterList.Parameters)
		{
			if (!first) {
				

#line default
#line hidden
#nullable disable
            WriteLiteral(", ");
#nullable restore
#line 42 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
                               
			} else { first = false; }
			

#line default
#line hidden
#nullable disable
#nullable restore
#line (44,12)-(44,58) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(par.Modifiers.Any() ? $"{par.Modifiers} " : "");

#line default
#line hidden
#nullable disable
#nullable restore
#line (44,61)-(44,75) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(par.Identifier);

#line default
#line hidden
#nullable disable
#nullable restore
#line 44 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
                                                                                           
		}

		

#line default
#line hidden
#nullable disable
            WriteLiteral(");\r\n\t\t\t}");
#nullable restore
#line 48 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
                    

		if (!method.IsRefPar)
		{
			

#line default
#line hidden
#nullable disable
#nullable restore
#line (52,5)-(52,39) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(method.Async.NormalizeWhitespace());

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\t\t\t\t{\r\n\t\t\t\t");
#nullable restore
#line (55,7)-(55,50) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(method.IsVoid ? "await " : $"return await ");

#line default
#line hidden
#nullable disable
            WriteLiteral("base.Client.");
#nullable restore
#line (55,65)-(55,89) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(method.Method.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral("Async(\r\n\t\t\t");
#nullable restore
#line 56 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
                   

			first = true;
			foreach (var par in method.Method.ParameterList.Parameters)
			{
				if (!first)
				{
					

#line default
#line hidden
#nullable disable
            WriteLiteral(", ");
#nullable restore
#line 63 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
                                   
				}
				else { first = false; }
				

#line default
#line hidden
#nullable disable
#nullable restore
#line (66,12)-(66,26) 6 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
Write(par.Identifier);

#line default
#line hidden
#nullable disable
#nullable restore
#line 66 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
                                            
			}

			

#line default
#line hidden
#nullable disable
            WriteLiteral(");\r\n\t\t\t\t}");
#nullable restore
#line 70 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
                        
		} else {
			

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\t\t\t\t\r\n\t\t\t//No async method, because the method has ref, in or out parameters.\r\n\r\n\t\t\t");
#nullable restore
#line 76 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
                   
		}
	}

#line default
#line hidden
#nullable disable
            WriteLiteral("}\r\n");
        }
        #pragma warning restore 1998
#nullable restore
#line 81 "c:\GitHub\SolidCP\SolidCP\Sources\SolidCP.Build\ClientClass.cshtml"
  
	public ClassDeclarationSyntax Class { get; set; }
	public IEnumerable<MethodDeclarationSyntax> WebMethods { get; set; }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
