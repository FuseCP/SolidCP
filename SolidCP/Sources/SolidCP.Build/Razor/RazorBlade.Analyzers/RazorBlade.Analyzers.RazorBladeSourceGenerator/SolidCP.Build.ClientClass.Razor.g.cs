#pragma checksum "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "478aa35d62990a0697122c5bb196c12b2f72d2e2"
// <auto-generated/>
#pragma warning disable 1591
namespace SolidCP.Build
{
    #line hidden
#nullable restore
#line 2 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
using Microsoft.CodeAnalysis;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
using Microsoft.CodeAnalysis.CSharp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
using Microsoft.CodeAnalysis.CSharp.Syntax;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
using static Microsoft.CodeAnalysis.CSharp.SyntaxFactory;

#line default
#line hidden
#nullable disable
    #nullable restore
    internal partial class ClientClass : RazorBlade.PlainTextTemplate
    #nullable disable
    {
        #pragma warning disable 1998
        protected async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("// wcf client proxy class\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n[System.CodeDom.Compiler.GeneratedCodeAttribute(\"SolidCP.Build\", \"1.0\")]\r\npublic class ");
#nullable restore
#line (14,16)-(14,32) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(Class.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral(": SolidCP.Web.Client.ClientBase<I");
#nullable restore
#line (14,68)-(14,84) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(Class.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral(", ");
#nullable restore
#line (14,89)-(14,105) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(Class.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral("AssemblyClient>, I");
#nullable restore
#line (14,126)-(14,142) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(Class.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral(" {\r\n\r\n");
#nullable restore
#line 16 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
     foreach (var method in WebMethods
		.Select(m => new {
			Method = m,
			Normal = (MemberDeclarationSyntax)MethodDeclaration(m.ReturnType, m.Identifier)
					.WithModifiers(TokenList(Token(SyntaxKind.PublicKeyword)))
					.WithParameterList(m.ParameterList),
			Async = (MemberDeclarationSyntax)MethodDeclaration(ParseTypeName(
						(m.ReturnType is PredefinedTypeSyntax && ((PredefinedTypeSyntax)m.ReturnType).Keyword.IsKind(SyntaxKind.VoidKeyword)) ? 
						"System.Threading.Tasks.Task" : $"System.Threading.Tasks.Task<{m.ReturnType}>"),
						$"{m.Identifier}Async")
					.WithModifiers(TokenList(Token(SyntaxKind.PublicKeyword), Token(SyntaxKind.AsyncKeyword)))
					.WithParameterList(m.ParameterList),
			IsVoid = (m.ReturnType is PredefinedTypeSyntax && ((PredefinedTypeSyntax)m.ReturnType).Keyword.IsKind(SyntaxKind.VoidKeyword))
			}))
	{
		

#line default
#line hidden
#nullable disable
#nullable restore
#line (31,4)-(31,39) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(method.Normal.NormalizeWhitespace());

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\t\t{\r\n\t\t\t");
#nullable restore
#line (34,6)-(34,37) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(method.IsVoid ? "" : $"return ");

#line default
#line hidden
#nullable disable
            WriteLiteral("base.Client.");
#nullable restore
#line (34,52)-(34,76) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(method.Method.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral("(\r\n\t\t");
#nullable restore
#line 35 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
               

		var first = true;
		foreach (var par in method.Method.ParameterList.Parameters)
		{
			if (!first) {
				

#line default
#line hidden
#nullable disable
            WriteLiteral(", ");
#nullable restore
#line 41 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
                               
			} else { first = false; }
			

#line default
#line hidden
#nullable disable
#nullable restore
#line (43,11)-(43,25) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(par.Identifier);

#line default
#line hidden
#nullable disable
#nullable restore
#line 43 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
                                        
		}

		

#line default
#line hidden
#nullable disable
            WriteLiteral(");\r\n        }");
#nullable restore
#line (49,4)-(49,38) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(method.Async.NormalizeWhitespace());

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        {\r\n\t\t\t");
#nullable restore
#line (52,6)-(52,49) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(method.IsVoid ? "await " : $"return await ");

#line default
#line hidden
#nullable disable
            WriteLiteral("base.Client.");
#nullable restore
#line (52,64)-(52,88) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(method.Method.Identifier);

#line default
#line hidden
#nullable disable
            WriteLiteral("Async(\r\n\t\t");
#nullable restore
#line 53 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
               

		first = true;
		foreach (var par in method.Method.ParameterList.Parameters)
		{
			if (!first) {
				

#line default
#line hidden
#nullable disable
            WriteLiteral(", ");
#nullable restore
#line 59 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
                               
			} else { first = false; }
			

#line default
#line hidden
#nullable disable
#nullable restore
#line (61,11)-(61,25) 6 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
Write(par.Identifier);

#line default
#line hidden
#nullable disable
#nullable restore
#line 61 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
                                        
		}

		

#line default
#line hidden
#nullable disable
            WriteLiteral(");\r\n        }");
#nullable restore
#line 65 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
                

	}

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n}\r\n\r\n");
        }
        #pragma warning restore 1998
#nullable restore
#line 72 "C:\GitHub\CoreWCF.Tests\SolidCP\SolidCP.Build\ClientClass.cshtml"
  
	public ClassDeclarationSyntax Class { get; set; }
	public IEnumerable<MethodDeclarationSyntax> WebMethods { get; set; }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
